{"version":3,"sources":["logo.svg","components/Image.js","components/PostContent.js","components/Post.js","components/Posts.js","components/Navbar.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Image","props","image","react_default","a","createElement","className","src","alt","PostContent","content","Post","components_Image","name","username","components_PostContent","Posts","components_Post","Navbar","role","aria-label","href","id","type","placeholder","App","components_Navbar","components_Posts","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.5dcaff1d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react'\r\n\r\nfunction Image(props) {\r\n    if (props.image) {\r\n        return (\r\n            <figure className=\"image is-4by3\">\r\n                <img src={props.image} alt=\"Placeholder\" />\r\n            </figure>\r\n        )\r\n    } else {\r\n        return (<span></span>)\r\n    }\r\n}\r\n\r\nexport default Image","import React from 'react'\r\n\r\nfunction PostContent(props) {\r\n    if (props.content) {\r\n        return (\r\n            <div className=\"content\">{props.content}</div>\r\n        )\r\n    } else {\r\n        return (<span></span>)\r\n    }\r\n}\r\n\r\nexport default PostContent","import React from 'react';\r\nimport '../Post.css';\r\nimport Image from './Image'\r\nimport PostContent from './PostContent'\r\n\r\nfunction Post(props) {\r\n    return (\r\n        <div className=\"Post\">\r\n            <div className=\"card\">\r\n                <div className=\"card-image\">\r\n                    <Image image={props.image}/>\r\n                </div>\r\n                <div className=\"card-content\">\r\n                    <div className=\"media\">\r\n                        <div className=\"media-left\">\r\n                            <figure className=\"image is-48x48\">\r\n                                <img src=\"https://bulma.io/images/placeholders/96x96.png\" alt=\"Placeholder\" />\r\n                            </figure>\r\n                        </div>\r\n                        <div className=\"media-content\">\r\n                            <div className=\"title is-4\">{props.name}</div>\r\n                            <div className=\"subtitle is-6\">@{props.username}</div>\r\n                        </div>\r\n                    </div>\r\n                    <PostContent content={props.content}/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Post;\r\n","import React from 'react'\r\nimport Post from \"./Post\"\r\nimport '../Post.css'\r\n\r\nfunction Posts() {\r\n    return (\r\n        <div>\r\n            <Post name=\"Samuel Vimes\" username=\"justiceserved\" image=\"https://bulma.io/images/placeholders/1280x960.png\"/>\r\n            <Post name=\"Rincewind\" username=\"rincethewizz\" content=\"Luck is my middle name. Mind you, my first name is 'Bad'.\"/>\r\n            <Post name=\"Carrot Ironfoundersson\" username=\"cplcarrot\" image=\"https://bulma.io/images/placeholders/1280x960.png\" content=\"An appointment is an engagement to see someone, while a morningstar is a large lump of metal used for viciously crushing skulls. It is important not to confuse the two, isn't it?\"/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Posts","import React from 'react'\r\nimport '../Navbar.css'\r\n\r\nfunction Navbar() {\r\n    return (\r\n        <div className=\"navbar is-fixed-top\" role=\"navigation\" aria-label=\"main navigation\">\r\n            <div className=\"container\">\r\n                <div className=\"navbar-brand\">\r\n                    <a className=\"navbar-item\" href=\"/\">\r\n                        <span className=\"icon\"><i className=\"fab fa-twitter\"></i></span>\r\n                    </a>\r\n                </div>\r\n                    {/* <div id=\"navbar\"> */}\r\n                <div id=\"search\" className=\"field navbar-item\">\r\n                    <p className=\"control has-icons-left\">\r\n                        <input className=\"input\" type=\"text\" placeholder=\"Search\" />\r\n                        <span className=\"icon is-small is-left\"><i className=\"fas fa-search\"></i></span>\r\n                    </p>\r\n                </div>\r\n                    <a className=\"navbar-item\">\r\n                        <div className=\"button is-small is-primary\">\r\n                            Sign in\r\n                        </div>\r\n                    </a>\r\n                    <a className=\"navbar-item\">\r\n                        <div className=\"button is-small\">\r\n                            Sign up\r\n                        </div>\r\n                    </a>\r\n                {/* </div> */}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Navbar","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Posts from './components/Posts'\nimport Navbar from './components/Navbar'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Navbar />\n      <div id=\"content\" className=\"container\">\n        <div className=\"columns\">\n          <div className=\"column is-two-thirds\">\n            <Posts />\n          </div>\n          <div className=\"column\">\n            <p>Suggested follows</p>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bulma/css/bulma.css'\nimport '@fortawesome/fontawesome-free/css/all.css'\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nif (module.hot) { module.hot.accept('./App') }\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}